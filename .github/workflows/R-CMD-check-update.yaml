on:
  push:
    branches: main
  pull_request:
    branches: main
  schedule:
    - cron: '0 1 * * 1' # Every Sunday at 5:00 PM PST = Monday at 01:00 UTC

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
          - {os: ubuntu-latest,   r: 'oldrel-1'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - name: 📦 Checkout repo
        uses: actions/checkout@v4

      - name: 📚 Set up Pandoc
        uses: r-lib/actions/setup-pandoc@v2

      - name: 🧰 Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - name: 📥 Install dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      - name: 🧪 Run R-CMD-check and save summary
        env:
          OS: ${{ matrix.config.os }}
          R: ${{ matrix.config.r }}
        run: |
          check <- rcmdcheck::rcmdcheck(
            args = c("--no-manual", "--compact-vignettes=gs+qpdf"),
            error_on = "never"
          )
          result <- toupper(check$status)
          log_text <- paste(
            utils::capture.output(print(check)),
            collapse = "\n"
          )
          filename <- paste0("status-", Sys.getenv("OS"), "-R", Sys.getenv("R"), ".txt")
          cat(result, "\n---\n", log_text, file = filename)
        shell: Rscript {0}

      - name: 💾 Upload status artifact
        uses: actions/upload-artifact@v4
        with:
          name: status
          path: status-${{ matrix.config.os }}-R${{ matrix.config.r }}.txt
          retention-days: 6

  message-slack:
    runs-on: ubuntu-latest
    needs: R-CMD-check
    if: always()

    steps:
      - name: 📦 Checkout repo
        uses: actions/checkout@v4

      - name: 📥 Download status artifacts
        uses: actions/download-artifact@v4
        with:
          name: status
          path: status

      - name: 🧰 Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - name: 📢 Send Slack message
        env:
          GITHUB_PAT: ${{ secrets.PRIVATE_ACTIONS_PAT }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          REPO: ${{ github.repository }}
          URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        run: |
          install.packages("remotes")
          remotes::install_github("poissonconsulting/poisslack")

          files <- list.files("status", full.names = TRUE)

          msg <- paste0("**R CMD check results for `", basename(Sys.getenv("REPO")), "`**:\n\n")
          for (i in files) {
            txt <- readLines(i)
            os_line <- txt[1]
            log_lines <- txt[-1]
            icon <- switch(
              TRUE,
              grepl("^SUCCESS", os_line) ~ "✅",
              grepl("^WARNING", os_line) ~ "⚠️",
              grepl("^NOTE", os_line) ~ "📝",
              TRUE ~ "❌"
            )
            msg <- paste0(msg, icon, " ", os_line, "\n")
            if (!grepl("^SUCCESS", os_line)) {
              snippet <- paste(log_lines[1:min(20, length(log_lines))], collapse = "\n")
              msg <- paste0(msg, "```\n", snippet, "\n```\n\n")
            }
          }
          msg <- paste0(msg, "🔗 View full logs: ", Sys.getenv("URL"))

          poisslack::slackr_bot(
            text = msg,
            channel = basename(Sys.getenv("REPO")),
            username = "check-package-bot",
            incoming_webhook_url = Sys.getenv("SLACK_WEBHOOK_URL")
          )
        shell: Rscript {0}
